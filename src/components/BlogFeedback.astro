---
interface Props {
  lang: "de" | "en";
}

interface Content {
  heading: string;
  feedbackHeading: string;
  feedbackPlaceholder: string;
  submitBtn: string;
}

const content: Record<Props["lang"], Content> = {
  de: {
    heading: "Wie hat dir der Artikel gefallen?",
    feedbackHeading: "Was können wir besser machen?",
    feedbackPlaceholder: "Dein Feedback.",
    submitBtn: "Senden",
  },
  en: {
    heading: "How did you like the article?",
    feedbackHeading: "What can we do better?",
    feedbackPlaceholder: "Your feedback.",
    submitBtn: "Send",
  },
};

const { lang } = Astro.props;
---

<div class={`rating rating__locale--${lang}`}>
  <h2 class="article__heading-two rating__heading">{content[lang].heading}</h2>
  <form>
    <input type="hidden" name="url" value={Astro.url.pathname} />
    <div class="rating__stars">
      <input type="radio" id="five" name="rating" value="5" />
      <label for="five"></label>
      <input type="radio" id="four" name="rating" value="4" />
      <label for="four"></label>
      <input type="radio" id="three" name="rating" value="3" />
      <label for="three"></label>
      <input type="radio" id="two" name="rating" value="2" />
      <label for="two"></label>
      <input type="radio" id="one" name="rating" value="1" />
      <label for="one"></label>
      <span class="rating__result"></span>
    </div>
    <div class="rating__feedback">
      <label class="rating__feedback-heading" for="message">{content[lang].feedbackHeading}</label>
      <textarea
        class="rating__feedback-text"
        placeholder={content[lang].feedbackPlaceholder}
        name="message"
        id="message"></textarea>
      <input class="rating__submit-btn" id="Senden" type="submit" value={content[lang].submitBtn} />
    </div>
    <p id="feedback-response"></p>
  </form>
  <script>
    const form = document.querySelector("form");
    const submitButton = document.querySelector("#Senden");
    const feedbackResponse = document.querySelector("#feedback-response");

    form.addEventListener("submit", (e) => {
      e.preventDefault();
      submitButton.classList.add("loading");
      submitButton.disabled = true;
      const formData = new FormData(e.currentTarget);
      fetch("/mail-feedback/", {
        method: "POST",
        body: formData,
      })
        .then((response) => {
          feedbackResponse.classList.remove(...feedbackResponse.classList);
          if (response.status === 201) {
            feedbackResponse.innerText = "Thank you for your feedback!";
            feedbackResponse.classList.add("success");
          } else if (response.status === 400) {
            feedbackResponse.innerText = "Please rate the article by clicking on a star above!";
            feedbackResponse.classList.add("warning");
          } else if (response.status === 500) {
            feedbackResponse.innerText = "Something went wrong...";
            feedbackResponse.classList.add("error");
          }
        })
        .catch((response) => {
          feedbackResponse.innerText = "Something went wrong...";
          feedbackResponse.classList.add("error");
        })
        .finally(() => {
          submitButton.disabled = false;
          submitButton.classList.remove("loading");
        });
    });
  </script>
</div>

<style is:inline>
    #Senden.loading {
    opacity: 0.5;
    position: relative;
  }
  #feedback-response {
    font-weight: 700;
  }
  #feedback-response.success {
    color: #198754;
  }
  #feedback-response.warning {
    color: #ff6b35;
  }
  #feedback-response.error {
    color: #dc3545;
  }
</style>
<style>
  form {
    width: 100%;
  }

  .rating {
    width: 100%;
  }

  .rating__heading {
    margin-bottom: 60px;
    text-align: center;
  }

  .rating,
  .rating__feedback {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
  }

  .rating__stars {
    display: flex;
    flex-direction: row-reverse;
    justify-content: center;
    width: 100%;
  }

  .rating__stars input {
    display: none;
  }

  .rating__stars label {
    font-size: 80px;
    color: lightgrey;
    cursor: pointer;
  }

  @media screen and (max-width: 480px) {
    .rating__stars label {
      width: 22%;
      font-size: 60px;
    }
  }


  .rating__stars label:before {
    content: "☆";
  }

  .rating__stars input:checked ~ label {
    color: var(--accent-color);
  }

  .rating__stars:not(:checked) > label:hover,
  .rating__stars:not(:checked) > label:hover ~ label {
    color: var(--accent-color);
  }

  .rating__stars input:checked > label:hover,
  .rating__stars input:checked > label:hover ~ label {
    color: var(--accent-color);
  }

  .rating__result:before {
    text-align: center;
    margin-bottom: 20px;
    content: "";
    font-size: 18px;
    font-weight: bold;
    color: var(--accent-color);
    display: none;
    position: absolute;
    left: 55%;
    transform: translate(-50%, -50%);
    width: 100%;
  }

  .rating__stars input:checked ~ .rating__result:before {
    display: block;
    margin: 0 auto;
  }

  .rating__locale--de .rating__stars #five:checked ~ .rating__result:before {
    content: "Es ist großartig!";
  }

  .rating__locale--de .rating__stars #four:checked ~ .rating__result:before {
    content: "Gefällt mir!";
  }

  .rating__locale--de .rating__stars #three:checked ~ .rating__result:before {
    content: "Ist ganz ok.";
  }

  .rating__locale--de .rating__stars #two:checked ~ .rating__result:before {
    content: "Ich finds eher schlecht.";
  }

  .rating__locale--de .rating__stars #one:checked ~ .rating__result:before {
    content: "Geht gar nicht.";
  }

  /* English */
  .rating__locale--en .rating__stars #five:checked ~ .rating__result:before {
    content: "It's awesome!";
  }

  .rating__locale--en .rating__stars #four:checked ~ .rating__result:before {
    content: "I like it!";
  }

  .rating__locale--en .rating__stars #three:checked ~ .rating__result:before {
    content: "It's okay.";
  }

  .rating__locale--en .rating__stars #two:checked ~ .rating__result:before {
    content: "I find it rather bad.";
  }

  .rating__locale--en .rating__stars #one:checked ~ .rating__result:before {
    content: "Not at all.";
  }
  .rating__submit-btn {
    color: #fff;
    background: #ff6b35;
    border: 2px solid #ff6b35;
    padding: 15px 20px;
    text-decoration: none;
    margin-top: 30px;
    margin-bottom: 20px;
    font-size: 18px;
    font-size: 1.25rem;
    font-family: "QuattrocentoSans", Arial, Helvetica, sans-serif;
    width: 100%;
    cursor: pointer;
  }

  .rating__submit-btn:hover {
    background: #fff;
    color: #ff6b35;
    border: 2px solid #ff6b35;
  }

  .rating__feedback-heading {
    font-size: 24px;
    margin-top: 28px;
    margin-bottom: 20px;
    font-family: "Cera Pro", Arial, Helvetica, sans-serif;
    text-align: center;
  }

  .rating__feedback-text {
    padding: 8px;
    font-size: 16px;
    font-family: "QuattrocentoSans", Arial, Helvetica, sans-serif;
    font-weight: normal;
    height: 200px;
    width: 100%;
  }

  .rating__feedback-text:hover,
  .rating__feedback-text:focus {
    border: 1px solid var(--accent-color);
  }

  textarea[type="text"] {
    border: 1px solid var(--text-color);
  }

  textarea[type="text"]:focus {
    border: 2px solid var(--accent-color);
  }
</style>
